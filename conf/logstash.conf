input {
  stdin {
    type => "syslog"
  }

  #file {
  #  type => "clientlog"
  #  path => "/home/sachith/work/temp/LogAnalytics_poc/*.log"
  #  start_position => "beginning"
  #  sincedb_path => "/dev/null"
  #}
  #file {
  #    type => "apache"
  #    path => "/var/log/apache2/access.log"
  #    start_position => "beginning"
  #    sincedb_path => "/dev/null"
  #  }

}

filter {
  if [type] == "testr" {
    grok {
      match => {"message" => "%{COMBINEDAPACHELOG}"}
      # match => { "publishData" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
    }
  }
  if [type] == "syslog" {
    grok {
      match => {"message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}"}
      # match => { "publishData" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
    }
    mutate {
      replace => {"host" => "%{syslog_hostname}" }
    }
    syslog_pri {}
    date {
      match => ["syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss"]
    }
  }
  if [type] == "clientlog" {
    grok {
      match => {"message" => "%{DATA:data}"}

    }

  }
}

output {

  stdout {
    codec => "rubydebug"
  }
  dasConnector {
    http_method => "post"
    url => "http://localhost:9763"
    content_type => "json"
    streamName => "logs"
    streamVersion => "1.0.0"

    storedFields => {"syslog_program" => "String" "syslog_pid" => "String" "syslog_name" => "String"}

    username => "admin"
    password => "admin"
  }
}